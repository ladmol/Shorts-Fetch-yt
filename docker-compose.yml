services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: ytdlp-rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"    # AMQP
      - "15672:15672"  # Management UI
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
    networks:
      - ytdlp-net

  minio:
    image: minio/minio:latest
    container_name: ytdlp-minio
    command: server /data --console-address ":9001"
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Web Console
    volumes:
      - ./data/minio:/data
    networks:
      - ytdlp-net

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    container_name: ytdlp-worker
    restart: unless-stopped
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_QUEUE: download.tasks
      RESULTS_QUEUE: download.results
      DOWNLOADS_DIR: /data/downloads
      # S3 / MinIO
      AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      AWS_REGION: us-east-1
      S3_ENDPOINT_URL: http://minio:9000
      S3_BUCKET: downloads
      S3_ADDRESSING_STYLE: path
    depends_on:
      - rabbitmq
      - minio
    volumes:
      - ./data/downloads:/data/downloads
    networks:
      - ytdlp-net

  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    container_name: ytdlp-bot
    restart: unless-stopped
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_QUEUE: download.tasks
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - ytdlp-net

networks:
  ytdlp-net:
    driver: bridge


